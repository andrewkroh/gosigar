// mk_audit_arches.pl
// MACHINE GENERATED BY THE ABOVE COMMAND; DO NOT EDIT

// +build ignore

package linux

/*
#include <audit.h>
*/
import "C"

import "fmt"

type AuditArch uint32

const (
	AUDIT_ARCH_AARCH64     = C.AUDIT_ARCH_AARCH64
	AUDIT_ARCH_ARM         = C.AUDIT_ARCH_ARM
	AUDIT_ARCH_ARMEB       = C.AUDIT_ARCH_ARMEB
	AUDIT_ARCH_CRIS        = C.AUDIT_ARCH_CRIS
	AUDIT_ARCH_FRV         = C.AUDIT_ARCH_FRV
	AUDIT_ARCH_I386        = C.AUDIT_ARCH_I386
	AUDIT_ARCH_IA64        = C.AUDIT_ARCH_IA64
	AUDIT_ARCH_M32R        = C.AUDIT_ARCH_M32R
	AUDIT_ARCH_M68K        = C.AUDIT_ARCH_M68K
	AUDIT_ARCH_MIPS        = C.AUDIT_ARCH_MIPS
	AUDIT_ARCH_MIPS64      = C.AUDIT_ARCH_MIPS64
	AUDIT_ARCH_MIPS64N32   = C.AUDIT_ARCH_MIPS64N32
	AUDIT_ARCH_MIPSEL      = C.AUDIT_ARCH_MIPSEL
	AUDIT_ARCH_MIPSEL64    = C.AUDIT_ARCH_MIPSEL64
	AUDIT_ARCH_MIPSEL64N32 = C.AUDIT_ARCH_MIPSEL64N32
	AUDIT_ARCH_PARISC      = C.AUDIT_ARCH_PARISC
	AUDIT_ARCH_PARISC64    = C.AUDIT_ARCH_PARISC64
	AUDIT_ARCH_PPC         = C.AUDIT_ARCH_PPC
	AUDIT_ARCH_PPC64       = C.AUDIT_ARCH_PPC64
	AUDIT_ARCH_PPC64LE     = C.AUDIT_ARCH_PPC64LE
	AUDIT_ARCH_S390        = C.AUDIT_ARCH_S390
	AUDIT_ARCH_S390X       = C.AUDIT_ARCH_S390X
	AUDIT_ARCH_SH          = C.AUDIT_ARCH_SH
	AUDIT_ARCH_SH64        = C.AUDIT_ARCH_SH64
	AUDIT_ARCH_SHEL        = C.AUDIT_ARCH_SHEL
	AUDIT_ARCH_SHEL64      = C.AUDIT_ARCH_SHEL64
	AUDIT_ARCH_SPARC       = C.AUDIT_ARCH_SPARC
	AUDIT_ARCH_SPARC64     = C.AUDIT_ARCH_SPARC64
	AUDIT_ARCH_X86_64      = C.AUDIT_ARCH_X86_64
)

var auditArchNames = map[AuditArch]string{
	AUDIT_ARCH_AARCH64:     "aarch64",
	AUDIT_ARCH_ARM:         "arm",
	AUDIT_ARCH_ARMEB:       "armeb",
	AUDIT_ARCH_CRIS:        "cris",
	AUDIT_ARCH_FRV:         "frv",
	AUDIT_ARCH_I386:        "i386",
	AUDIT_ARCH_IA64:        "ia64",
	AUDIT_ARCH_M32R:        "m32r",
	AUDIT_ARCH_M68K:        "m68k",
	AUDIT_ARCH_MIPS:        "mips",
	AUDIT_ARCH_MIPS64:      "mips64",
	AUDIT_ARCH_MIPS64N32:   "mips64n32",
	AUDIT_ARCH_MIPSEL:      "mipsel",
	AUDIT_ARCH_MIPSEL64:    "mipsel64",
	AUDIT_ARCH_MIPSEL64N32: "mipsel64n32",
	AUDIT_ARCH_PARISC:      "parisc",
	AUDIT_ARCH_PARISC64:    "parisc64",
	AUDIT_ARCH_PPC:         "ppc",
	AUDIT_ARCH_PPC64:       "ppc64",
	AUDIT_ARCH_PPC64LE:     "ppc64le",
	AUDIT_ARCH_S390:        "s390",
	AUDIT_ARCH_S390X:       "s390x",
	AUDIT_ARCH_SH:          "sh",
	AUDIT_ARCH_SH64:        "sh64",
	AUDIT_ARCH_SHEL:        "shel",
	AUDIT_ARCH_SHEL64:      "shel64",
	AUDIT_ARCH_SPARC:       "sparc",
	AUDIT_ARCH_SPARC64:     "sparc64",
	AUDIT_ARCH_X86_64:      "x86_64",
}

func (a AuditArch) String() string {
	name, found := auditArchNames[a]
	if found {
		return name
	}

	return fmt.Sprintf("unknown[%x]", uint32(a))
}
